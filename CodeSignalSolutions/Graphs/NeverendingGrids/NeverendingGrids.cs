/*
    Imported:   2020-05-23 21:03
    Created By: Casper
    Url:        https://app.codesignal.com/arcade/graphs-arcade
*/
using NUnit.Framework;
using CodeSignalSolutions;
using CodeSignalSolutions.Graphs.NeverendingGrids;

namespace Graphs
{
    public class NeverendingGrids
    {
        /*
            Imported: 2020-05-23 21:03
            By:       Casper
            Url:      https://app.codesignal.com/arcade/graphs-arcade/neverending-grids/HY68Gv9BWPLefQ7CT
        */
        [Test]
        public void digitJumping()
        {
            Test.Execute(typeof(digitJumpingClass),
                @"grid:
                [[0,1,4,2,3],
                 [1,4,2,8,2],
                 [2,2,3,4,9],
                 [8,7,2,2,3]]
                start: [0, 0]
                finish: [3, 4]
                Expected Output: 4",
                @"grid: [[5,3,6]]
                start: [0, 1]
                finish: [0, 1]
                Expected Output: 0",
                @"grid:
                [[1],
                 [2],
                 [3],
                 [4],
                 [5],
                 [6],
                 [7],
                 [8],
                 [9],
                 [0]]
                start: [9, 0]
                finish: [0, 0]
                Expected Output: 9",
                @"grid:
                [[1,2,3,0,4,3],
                 [5,6,2,3,9,5],
                 [5,3,2,5,6,7],
                 [0,2,5,6,3,1]]
                start: [0, 0]
                finish: [3, 5]
                Expected Output: 1",
                @"grid: [[9]]
                start: [0, 0]
                finish: [0, 0]
                Expected Output: 0",
                @"grid: [[0]]
                start: [0, 0]
                finish: [0, 0]
                Expected Output: 0",
                @"grid:
                [[7,3,1,0,9,5],
                 [5,8,9,8,1,9],
                 [6,7,3,3,7,3],
                 [5,7,7,3,9,5],
                 [3,6,8,0,2,6],
                 [5,9,0,9,6,1],
                 [5,2,6,3,7,8],
                 [1,9,9,0,6,8],
                 [3,3,2,9,2,5]]
                start: [6, 3]
                finish: [6, 1]
                Expected Output: 2",
                @"grid: [[3,2,9,3,9,3,7,6,6,5,0,9,8,2,9],
                [6,2,9,2,8,0,4,7,7,3,2,4,8,1,2],
                [9,3,0,5,4,7,1,6,2,2,8,7,4,1,2],
                [3,4,2,9,6,9,9,5,9,9,3,2,5,7,2],
                [3,8,8,0,3,9,1,0,9,0,7,6,0,2,2],
                [8,2,7,0,2,8,3,1,2,3,2,9,5,0,4],
                [4,1,4,5,1,9,6,3,2,9,3,2,5,9,3],
                [1,3,0,1,5,5,0,6,2,7,5,2,4,8,8],
                [7,8,7,1,4,3,4,0,4,2,4,6,2,9,0],
                [5,9,9,9,0,1,5,5,3,2,4,9,9,3,0],
                [1,9,5,7,2,7,0,9,0,1,4,8,3,2,8],
                [0,3,5,3,0,1,7,7,0,3,4,3,0,1,3],
                [2,7,0,4,0,6,2,4,8,3,7,3,1,2,7],
                [3,0,0,9,1,6,4,7,5,0,1,7,9,4,4],
                [7,7,6,8,1,2,8,8,5,8,4,5,1,2,5]]
                start: [11,13]
                finish: [11,6]
                Expected Output: 2",
                @"grid:
                [[7,2,5,0,7,0,3,8,6,8],
                 [1,4,8,1,3,0,4,0,5,4],
                 [5,7,7,0,6,9,0,4,2,6],
                 [3,9,1,6,9,6,8,9,1,3],
                 [7,5,2,1,2,2,8,3,0,3],
                 [2,9,5,7,6,1,2,3,6,6],
                 [6,4,7,9,1,5,1,8,9,2],
                 [1,1,8,9,6,1,7,3,5,8],
                 [5,8,5,2,3,2,7,9,7,5]]
                start: [7, 1]
                finish: [7, 7]
                Expected Output: 3",
                @"grid: [[5,6,9,0,7,1,2,8,3,5],
                [7,6,2,0,5,8,4,5,7,2],
                [6,3,8,5,2,1,7,3,8,4],
                [1,2,2,0,2,9,4,5,5,2],
                [4,6,6,0,2,4,4,2,4,0],
                [0,5,6,6,3,9,1,3,0,9],
                [4,5,5,0,6,8,2,9,9,5],
                [2,1,5,3,8,7,2,4,7,1],
                [2,8,9,8,1,2,9,6,8,5],
                [3,2,1,7,2,7,6,7,4,7],
                [2,0,8,2,4,0,2,1,0,0],
                [6,3,2,3,3,8,4,4,4,9],
                [5,7,1,3,9,9,6,1,0,0]]
                start: [7,3]
                finish: [3,5]
                Expected Output: 3"
            );
        }
    }
}
